#!/usr/bin/env python3

# modules
import argparse

'''
Tabulate paired-end alignment statistics generated by Bowtie2.
'''

# functions
def parse_command_line():

    global infile
    global sample
    global outfile

    parser = argparse.ArgumentParser(description='Read input file.')
    parser.add_argument('-i', '--input', action='store', dest='input', help='Name of input file')

    args = parser.parse_args()

    infile = args.input
    sample = infile.split('.')[0]
    outfile = sample + '.out'
    print(infile)
    print(outfile)

def read_align_output():
    align_out_data = []
    align_out_data.append(sample)

    with open(infile, 'r') as f:
        data = f.readlines()
        data = [x.strip() for x in data]

    for dat in data:
        da = dat.split(' ')
        if da[0].isdigit():
            align_out_data.append(da[0])
        if '%' in da[0]:
            align_out_data.append(da[0])

    print(align_out_data)
    print(len(align_out_data))

    align_out_cols = 'Sample', 'N_reads', 'N_paired_reads','N_paired_align_0','N_paired_align_1', \
        'N_paired_align_>1', 'N_paired_align_0','N_paired_align_disc_1', 'N_pairs_align_0', \
        'N_mates', 'N_mates_align_0', 'N_mates_align_1', 'N_mates_align_>1', \
        'N_unpaired_reads', 'N_unpaired_align_0', 'N_unpaired_align_1', 'N_unpaired_align_>1', \
        'Align_rate'

    print(align_out_cols)
    print(len(align_out_cols))

    align_res = ','.join(align_out_cols), ','.join(align_out_data)

    of = open(outfile, 'w')
    for res in align_res:
        of.write(res + '\n')
    of.close()

# main
if __name__ == '__main__':
    parse_command_line()
    read_align_output()
